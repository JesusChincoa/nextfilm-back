{
  "openapi": "3.0.0",
  "info": {
    "title": "NextiFilm API",
    "version": "1.0.0",
    "description": "API para gestionar el catálogo de películas del videoclub"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Films",
      "description": "Everything about your Films"
    },
    {
      "name": "Auth",
      "description": "EndPoints for Authentication"
    },
    {
      "name": "Rentals",
      "description": "EndPoints for Rentals"
    },
    {
      "name": "Database",
      "description": "EndPoint for Initializing the database"
    }
  ],
  "paths": {
    "/getFilms": {
      "get": {
        "tags": ["Films"],
        "summary": "Get all Films",
        "description": "Return all the films of the videoclub",
        "responses": {
          "200": {
            "description": "Films List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pelicula"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/getFilm/{idFilm}": {
      "get": {
        "tags": ["Films"],
        "summary": "Get a Film",
        "description": "Return a concrete film of the videoclub",
        "parameters": [
          {
            "name": "idFilm",
            "in": "path",
            "description": "ID of film to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Film Data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pelicula"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/updateFilm/{idFilm}": {
      "put": {
        "tags": ["Films"],
        "summary": "Update a Film",
        "description": "Return the Film updated",
        "parameters": [
          {
            "name": "idFilm",
            "in": "path",
            "description": "ID of film to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeliculaDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Uptaded Film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pelicula"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/newFilm": {
      "post": {
        "tags": ["Films"],
        "summary": "Create a new Film",
        "description": "Return the new Film",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeliculaDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New Film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pelicula"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },

    "/deleteFilm/{idFilm}": {
      "delete": {
        "tags": ["Films"],
        "summary": "Delete a Film",
        "description": "Return a 200 status if deletion succeded",
        "parameters": [
          {
            "name": "idFilm",
            "in": "path",
            "description": "ID of film to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Film Deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/filmNews": {
      "get": {
        "tags": ["Films"],
        "summary": "Get News from the VideoClub Films",
        "description": "Get News from the VideoClub Films",
        "responses": {
          "200": {
            "description": "Film Deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login",
        "description": "EndPoint for login into app",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login Succeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },

    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register",
        "description": "EndPoint for register in the app",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register Succeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },

    "/auth/checkStatus": {
      "post": {
        "tags": ["Auth"],
        "summary": "Check Token",
        "description": "EndPoint for checking a token. It checks if is a valid token and if it is still on date. If OK, it renews the expiration date of the token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Check Succeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/seed": {
      "post": {
        "tags": ["Database"],
        "summary": "Initialize Database",
        "description": "Clear and add new data to the database",
        "responses": {
          "200": {
            "description": "Seed Succeded"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/getRentals": {
      "get": {
        "tags": ["Rentals"],
        "summary": "Get all Rentals",
        "description": "Return all the rentals of the videoclub",
        "responses": {
          "200": {
            "description": "Rentals List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rental"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/getRental/{idRental}": {
      "get": {
        "tags": ["Rentals"],
        "summary": "Get a Rental",
        "description": "Return a concrete rental of the videoclub",
        "parameters": [
          {
            "name": "idRental",
            "in": "path",
            "description": "ID of rental to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rental Data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "getRentalsByUser/{idUser}": {
      "get": {
        "tags": ["Rentals"],
        "summary": "Get Rentals by User",
        "description": "Return all the rentals of a user",
        "parameters": [
          {
            "name": "idUser",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rentals List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rental"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/newRental": {
      "post": {
        "tags": ["Rentals"],
        "summary": "Create a new Rental",
        "description": "Return the new Rental",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New Rental",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/updateRental/{idRental}": {
      "put": {
        "tags": ["Rentals"],
        "summary": "Update a Rental",
        "description": "Return the Rental updated",
        "parameters": [
          {
            "name": "idRental",
            "in": "path",
            "description": "ID of rental to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Uptaded Rental",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/returnRental/{idRental}": {
      "delete": {
        "tags": ["Rentals"],
        "summary": "Mark a Rental as returned",
        "description": "Mark the date of return of a rental",
        "parameters": [
          {
            "name": "idRental",
            "in": "path",
            "description": "ID of rental to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rental Marked as Returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pelicula": {
        "type": "object",
        "properties": {
          "filmId": {
            "type": "string",
            "example": "324dfd2321..."
          },
          "title": {
            "type": "string",
            "example": "El Padrino"
          },
          "genre": {
            "type": "string",
            "example": "Drama"
          },
          "release": {
            "type": "Date",
            "example": "1973-02-12"
          },
          "director": {
            "type": "string",
            "example": "Russo Brothers"
          },
          "duration": {
            "type": "integer",
            "example": 120
          },
          "stock": {
            "type": "integer",
            "example": 12
          },
          "rental_price": {
            "type": "integer",
            "example": 20
          },
          "description": {
            "type": "string",
            "example": "This film ..."
          }
        }
      },
      "PeliculaDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "El Padrino"
          },
          "genre": {
            "type": "string",
            "example": "Drama"
          },
          "release": {
            "type": "Date",
            "example": "1973-02-12"
          },
          "director": {
            "type": "string",
            "example": "Russo Brothers"
          },
          "duration": {
            "type": "integer",
            "example": 120
          },
          "stock": {
            "type": "integer",
            "example": 12
          },
          "rental_price": {
            "type": "integer",
            "example": 20
          },
          "description": {
            "type": "string",
            "example": "Esta película ..."
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id_user": {
            "type": "string",
            "example": "324dfd2321..."
          },
          "name": {
            "type": "string",
            "example": "Pepe Rodriguez"
          },
          "isAdmin": {
            "type": "boolean",
            "example": true
          },
          "email": {
            "type": "string",
            "example": "pepe@correo.com"
          }
        }
      },
      "Rental": {
        "type": "object",
        "properties": {
          "renralID": {
            "type": "string",
            "example": "324dfd2321..."
          },
          "userId": {
            "type": "string",
            "example": "324dfd2321..."
          },
          "filmId": {
            "type": "string",
            "example": "324dfd2321..."
          },
          "paid": {
            "type": "boolean",
            "example": true
          },
          "rentalDate": {
            "type": "Date",
            "example": "1973-02-12"
          },
          "expedtedReturnDate": {
            "type": "Date",
            "example": "1973-02-12"
          },
          "returnDate": {
            "type": "Date",
            "example": "1973-02-12"
          }
        }
      },
      "RentalDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "324dfd2321..."
          },
          "filmId": {
            "type": "string",
            "example": "324dfd2321..."
          },
          "rentalDate": {
            "type": "Date",
            "example": "1973-02-12"
          },
          "paid": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "LoginDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "pepe@correo.com"
          },
          "password": {
            "type": "string",
            "example": "Abc123"
          }
        }
      },
      "RegisterDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "pepe@correo.com"
          },
          "password": {
            "type": "string",
            "example": "Abc123"
          },
          "name": {
            "type": "string",
            "example": "Pepe Rodriguez"
          }
        }
      },
      "TokenDTO": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "token132123token"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "token132123token"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "errorNumber": {
            "type": "integer",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "Message..."
          }
        }
      }
    }
  }
}
